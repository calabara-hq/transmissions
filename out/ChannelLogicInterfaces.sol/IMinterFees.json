{"abi":[{"type":"function","name":"getChannelFeeConfig","inputs":[{"name":"channel","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IMinterFees.FeeConfig","components":[{"name":"channelTreasury","type":"address","internalType":"address"},{"name":"uplinkFee","type":"uint256","internalType":"uint256"},{"name":"channelFee","type":"uint256","internalType":"uint256"},{"name":"creatorFee","type":"uint256","internalType":"uint256"},{"name":"mintReferralFee","type":"uint256","internalType":"uint256"},{"name":"firstMinterFee","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"setChannelFeeConfig","inputs":[{"name":"channel","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getChannelFeeConfig(address)":"14e6b37d","setChannelFeeConfig(address,bytes)":"a9998424"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"getChannelFeeConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"channelTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"uplinkFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"channelFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creatorFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintReferralFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstMinterFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IMinterFees.FeeConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setChannelFeeConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/channel/ChannelLogicInterfaces.sol\":\"IMinterFees\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/channel/ChannelLogicInterfaces.sol\":{\"keccak256\":\"0x398a9f8966288538522907618e14019faddd0d5340854e4a87ec5e490ad9d13c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5499f84fb9517af19e24e1cfc6b489629f7fb1960abc6e2cb5838768f301c90d\",\"dweb:/ipfs/QmfLneqS7nepvw97fodYeb7frfAcjLvGtqkMqvhJEnxdga\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"channel","type":"address"}],"stateMutability":"view","type":"function","name":"getChannelFeeConfig","outputs":[{"internalType":"struct IMinterFees.FeeConfig","name":"","type":"tuple","components":[{"internalType":"address","name":"channelTreasury","type":"address"},{"internalType":"uint256","name":"uplinkFee","type":"uint256"},{"internalType":"uint256","name":"channelFee","type":"uint256"},{"internalType":"uint256","name":"creatorFee","type":"uint256"},{"internalType":"uint256","name":"mintReferralFee","type":"uint256"},{"internalType":"uint256","name":"firstMinterFee","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"channel","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"setChannelFeeConfig"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/channel/ChannelLogicInterfaces.sol":"IMinterFees"},"evmVersion":"paris","libraries":{}},"sources":{"src/channel/ChannelLogicInterfaces.sol":{"keccak256":"0x398a9f8966288538522907618e14019faddd0d5340854e4a87ec5e490ad9d13c","urls":["bzz-raw://5499f84fb9517af19e24e1cfc6b489629f7fb1960abc6e2cb5838768f301c90d","dweb:/ipfs/QmfLneqS7nepvw97fodYeb7frfAcjLvGtqkMqvhJEnxdga"],"license":"MIT"}},"version":1},"id":49}